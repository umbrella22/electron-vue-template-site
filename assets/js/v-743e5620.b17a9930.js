"use strict";(self.webpackChunkelectron_vue_template_doc=self.webpackChunkelectron_vue_template_doc||[]).push([[441],{7430:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-743e5620",path:"/Overview/advanced/FrostedGlassWindow.html",title:"windows 中的毛玻璃窗口效果",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1677743789e3},filePathRelative:"Overview/advanced/FrostedGlassWindow.md"}},234:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var p=a(6252);const t=(0,p.uE)('<h1 id="windows-中的毛玻璃窗口效果" tabindex="-1"><a class="header-anchor" href="#windows-中的毛玻璃窗口效果" aria-hidden="true">#</a> windows 中的毛玻璃窗口效果</h1><p>在看到 macos 中的毛玻璃效果，我承认我酸了，但是 win10 中的设置却是半边毛玻璃效果的，这让我看到了一丝希望，毕竟是系统已经自带了这个 api，至于怎么调用，那就是我们自己的事情了。终于，在群友<code>℡〆啸、**、龍騰、◇雪晨</code>大佬的帮助下，成功让 electron 能够拥有此项功能</p><ul><li>首先，准备我们这次需要的工具包： <ul><li>ffi-napi</li><li>ref-napi</li><li>ref-struct-napi</li><li>windows 8 以上版本的操作系统</li></ul></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> ffi-napi ref-napi ref-struct-napi -S\n<span class="token comment"># 或者</span>\n<span class="token function">npm</span> <span class="token function">install</span> ffi-napi ref-napi ref-struct-napi -S\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',4),e={class:"custom-container tip"},o=(0,p._)("p",{class:"custom-container-title"},"提示",-1),c=(0,p.Uk)("安装完成以后，模板将会自动执行 rebuild，剩下就是写代码了。当然你可能会遇到 rebuild 失败的情况，当发生 rebuild 失败时，你需要按照调用原生 dll 篇章来对你的环境进行检查。而且如果您没有使用 webpack 对主进程进行打包时（比如 rollup）您需要将这三个依赖添加到"),l={href:"https://rollupjs.org/guide/zh/#rolluprollup",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("设置外部引用(externals)"),u=(0,p.Uk)("才可以正常工作"),i=(0,p.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 新建一个名为maobili的js，内容为</span>\n<span class="token doc-comment comment">/**\n * power by 猫猫头(864736317)\n */</span>\n<span class="token comment">// 都需要安装一次</span>\n<span class="token keyword">import</span> ffi <span class="token keyword">from</span> <span class="token string">&quot;ffi-napi&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ref <span class="token keyword">from</span> <span class="token string">&quot;ref-napi&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> struct <span class="token keyword">from</span> <span class="token string">&quot;ref-struct-napi&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">INT</span> <span class="token operator">=</span> ref<span class="token punctuation">.</span>types<span class="token punctuation">.</span>int<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> AccentPolicy <span class="token operator">=</span> <span class="token function">struct</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">AccentState</span><span class="token operator">:</span> <span class="token constant">INT</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">AccentFlags</span><span class="token operator">:</span> <span class="token constant">INT</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">GradientColor</span><span class="token operator">:</span> <span class="token constant">INT</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">AnimationId</span><span class="token operator">:</span> <span class="token constant">INT</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> WindowCompositionAttributeData <span class="token operator">=</span> <span class="token function">struct</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">Attribute</span><span class="token operator">:</span> <span class="token constant">INT</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">Data</span><span class="token operator">:</span> ref<span class="token punctuation">.</span><span class="token function">refType</span><span class="token punctuation">(</span>AccentPolicy<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">SizeOfData</span><span class="token operator">:</span> <span class="token constant">INT</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> accent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccentPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 颜色类型0-6</span>\n<span class="token doc-comment comment">/**\n * ACCENT_DISABLED=0，禁用\n * ACCENT_ENABLE_GRADIENT=1，不透明，可以设置颜色\n * ACCENT_ENABLE_TRANSPARENT_GRADIENT=2，只透明，可以设置颜色\n * ACCENT_ENABLE_BLUR_BEHIND=3，毛玻璃，无法设置颜色\n * ACCENT_ENABLE_ACRYLIC_BLUR_BEHIND=4，毛玻璃可以设置颜色但是窗口不可移动并无法拖动大小\n * ACCENT_ENABLE_HOST_BACKDROP=5， // 必须win10 1809以上才可以使用\n * ACCENT_INVALID_STATE= 6 非法6及其以上\n */</span>\n<span class="token comment">// 但是这里其实通常是可以设置成3，然后通过css带上rgba通道来实现着色效果，</span>\n<span class="token comment">// 唯一的区别就是，它的模糊程度不如4</span>\naccent<span class="token punctuation">.</span>AccentState <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token comment">// 颜色值</span>\n<span class="token comment">// 255&lt;&lt;0|1&lt;&lt;8|2&lt;&lt;16|100&lt;&lt;24</span>\n<span class="token comment">// 其中255 1 2 100为rgba值，0 8 16 24是固定</span>\naccent<span class="token punctuation">.</span>GradientColor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">34</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">34</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">34</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> windowcompositon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WindowCompositionAttributeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nwindowcompositon<span class="token punctuation">.</span>Attribute <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">;</span>\nwindowcompositon<span class="token punctuation">.</span>Data <span class="token operator">=</span> accent<span class="token punctuation">.</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nwindowcompositon<span class="token punctuation">.</span>SizeOfData <span class="token operator">=</span> accent<span class="token punctuation">.</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>byteLength<span class="token punctuation">;</span>\n\n<span class="token comment">// 传入参数，窗口句柄id和颜色设置参数</span>\n<span class="token keyword">const</span> user32 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ffi<span class="token punctuation">.</span>Library</span><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">SetWindowCompositionAttribute</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token constant">INT</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token constant">INT</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">refType</span><span class="token punctuation">(</span>WindowCompositionAttributeData<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 导出</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> windowcompositon<span class="token punctuation">,</span> user32 <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 在创建窗口的位置引入</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> user32<span class="token punctuation">,</span> windowcompositon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;你自己存放上面js的位置/maoboli&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">// 同时记得开启窗体透明和无边框</span>\n<span class="token comment">// 需要注意的是 tempWindow 为您需要对其进行毛玻璃化的窗口实例</span>\n<span class="token keyword">const</span> handle <span class="token operator">=</span> tempWindow<span class="token punctuation">.</span><span class="token function">getNativeWindowHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nuser32<span class="token punctuation">.</span><span class="token function">SetWindowCompositionAttribute</span><span class="token punctuation">(</span>\n  handle<span class="token punctuation">.</span><span class="token function">readInt32LE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  windowcompositon<span class="token punctuation">.</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>如果一切顺利的话您将得到如下图的效果</p></blockquote><div style="display:flex;justify-content:center;"><img style="width:290px;" src="/electron-vue-template-doc/images/img/maoboli.png"></div>',4),k={},b=(0,a(3744).Z)(k,[["render",function(n,s){const a=(0,p.up)("ExternalLinkIcon");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("div",e,[o,(0,p._)("p",null,[c,(0,p._)("a",l,[r,(0,p.Wm)(a)]),u])]),i],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);