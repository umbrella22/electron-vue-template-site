"use strict";(self.webpackChunkelectron_vue_template_doc=self.webpackChunkelectron_vue_template_doc||[]).push([[370],{4591:(e,t,c)=>{c.r(t),c.d(t,{data:()=>n});const n={key:"v-4ffdce10",path:"/Overview/advanced/",title:"跨域问题",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1677743789e3},filePathRelative:"Overview/advanced/readme.md"}},6499:(e,t,c)=>{c.r(t),c.d(t,{default:()=>o});var n=c(6252);const a=(0,n._)("h1",{id:"跨域问题",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#跨域问题","aria-hidden":"true"},"#"),(0,n.Uk)(" 跨域问题")],-1),l=(0,n._)("blockquote",null,[(0,n._)("p",null,[(0,n.Uk)("跨域：即触发了浏览器的同源策略即请求的时候出现： "),(0,n._)("code",null,"Access to XMLHttpRequest at ***")])],-1),r=(0,n._)("div",{class:"custom-container tip"},[(0,n._)("p",{class:"custom-container-title"},"TIP"),(0,n._)("p",null,"针对跨域问题，这一点在electron中其实无需担心，理解跨域产生问题的前端小朋友们应当知道这是浏览器造成的，此时我们只需要在主进程创建窗口位置设置一个值即可（electron版本高于4.x.x）即webPreferences中的webSecurity选项 ；将其设置为false就好了，至于为何事高于4.x.x呢，因为在低于该版本中，electron团队已经默认将其设置为false")],-1),s=(0,n._)("p",null,"但是你可能会在使用webview标签或者是子窗口的时候还是会遇到跨域问题，此时你需要在新建窗口时同样关闭该选项即可。",-1),d={},o=(0,c(3744).Z)(d,[["render",function(e,t){return(0,n.wg)(),(0,n.iD)(n.HY,null,[a,l,r,s],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const c=e.__vccOpts||e;for(const[e,n]of t)c[e]=n;return c}}}]);